name: Mirror A:staging -> B:main (FF, strip .github)

on:
  push:
    branches: [staging]
  workflow_dispatch:

# evita que corran dos mirrors a la vez
concurrency:
  group: mirror-staging-to-main
  cancel-in-progress: true

jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo A (staging)
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0

      - name: Build FF commit and push to Repo B:main (no force)
        env:
          TOKEN: ${{ secrets.GCCONTRACTS_MIRROR_STAGING_SECRET }}
        run: |
          set -euo pipefail

          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          # Usar tu PAT (no el GITHUB_TOKEN)
          git config --unset-all http.https://github.com/.extraheader || true
          git config --global --unset-all http.https://github.com/.extraheader || true
          sudo git config --system --unset-all http.https://github.com/.extraheader || true

          # 1) Preparar el árbol de A:staging SIN .github
          rm -rf .github || true
          git add -A
          TREE="$(git write-tree)"

          # Metadatos del último commit de A:staging (para replicar mensaje/autor/fecha)
          MSG="$(git log -1 --pretty=%B)"
          AN="$(git log -1 --format='%an')"
          AE="$(git log -1 --format='%ae')"
          AD="$(git log -1 --format='%ad' --date=iso-strict)"

          # 2) Conectar Repo B y traer su main
          git remote remove mirror 2>/dev/null || true
          git remote add mirror "https://x-access-token:${TOKEN}@github.com/fhidalgoGC/testbranch.git"

          attempt=0
          while [ $attempt -lt 3 ]; do
            # Traer última punta de main de B
            git fetch mirror main:mirror-main

            # Si el árbol es idéntico, no hay nada que empujar
            BASE_TREE="$(git show -s --format=%T mirror-main || echo '')"
            if [ "$TREE" = "$BASE_TREE" ]; then
              echo "Sin cambios (tras quitar .github); nada que empujar."
              exit 0
            fi

            # 3) Crear commit NUEVO con padre = B:main y tree = A:staging sin .github
            export GIT_AUTHOR_NAME="$AN" GIT_AUTHOR_EMAIL="$AE" GIT_AUTHOR_DATE="$AD"
            export GIT_COMMITTER_NAME="GitHub Actions" GIT_COMMITTER_EMAIL="actions@github.com" GIT_COMMITTER_DATE="$AD"
            NEW_COMMIT="$(printf "%s" "$MSG" | git commit-tree "$TREE" -p mirror-main)"

            # 4) Avanzar ref local y empujar en fast-forward (SIN --force)
            git update-ref refs/heads/ff-main "$NEW_COMMIT"
            if git push mirror refs/heads/ff-main:refs/heads/main; then
              echo "Push en fast-forward OK."
              exit 0
            fi

            echo "El remoto avanzó entre fetch y push; reintentando..."
            attempt=$((attempt+1))
            sleep 2
          done

          echo "No se pudo empujar en fast-forward tras reintentos." >&2
          exit 1
